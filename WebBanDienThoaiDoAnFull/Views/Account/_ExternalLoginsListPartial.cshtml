@model WebBanDienThoaiDoAn.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))/*ExternalLogin*/
        {
            @Html.AntiForgeryToken()

            //thêm mới


            <div class="social-auth-links text-center">
                <p>- OR -</p>
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">
                            <i class="fa fa-google-plus"></i> Sign in using Google +
                        </button>
                    }
                </p>
            </div>

        }
    }
}

@*<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>

    <script type="text/javascript" src="http://code.jquery.com/jquery-1.8.2.js"></script>
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script type="text/javascript">
        var OAUTHURL = 'https://accounts.google.com/o/oauth2/auth?';
        var VALIDURL = 'https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=';
        var SCOPE = 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email';
        var CLIENTID = '331417780027-lo2mtpg59b47v87alelkuv1o5889h78d.apps.googleusercontent.com';
        var REDIRECT = 'http://localhost:56623/Home/Index';
        var LOGOUT = 'http://localhost:56623/Home/Index';
        var TYPE = 'token';
        var _url = OAUTHURL + 'scope=' + SCOPE + '&client_id=' + CLIENTID + '&redirect_uri=' + REDIRECT + '&response_type=' + TYPE;
        var acToken;
        var tokenType;
        var expiresIn;
        var user;
        var loggedIn = false;

        function login() {

            var win = window.open(_url, "windowname1", 'width=800, height=600');
            var pollTimer = window.setInterval(function () {
                try {
                    console.log(win.document.URL);
                    if (win.document.URL.indexOf(REDIRECT) != -1) {
                        window.clearInterval(pollTimer);
                        var url = win.document.URL;
                        acToken = gup(url, 'access_token');
                        tokenType = gup(url, 'token_type');
                        expiresIn = gup(url, 'expires_in');

                        win.close();
                        debugger;
                        validateToken(acToken);
                    }
                }
                catch (e) {

                }
            }, 500);
        }

        function gup(url, name) {
            namename = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\#&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(url);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function validateToken(token) {

            getUserInfo();
            $.ajax(

                {

                    url: VALIDURL + token,
                    data: null,
                    success: function (responseText) {


                    },

                });

        }

        function getUserInfo() {


            $.ajax({

                url: 'https://www.googleapis.com/oauth2/v1/userinfo?access_token=' + acToken,
                data: null,
                success: function (resp) {
                    user = resp;
                    console.log(user);
                    $('#uname').html('Welcome ' + user.name);
                    $('#uemail').html('Email: ' + user.email)
                    $('#imgHolder').attr('src', user.picture);


                },


            }),

                $.ajax({

                    url: '/Home/GoogleLogin/',

                    type: 'POST',
                    data: {
                        email: user.email,
                        name: user.name,
                        gender: user.gender,
                        lastname: user.lastname,
                        location: user.location
                    },
                    success: function () {
                        window.location.href = "/Home/Index/";
                    },

                    //dataType: "jsonp"

                });


        }

    </script>

</head>
<body>
    <div>
        <button class="button" id="GoogleLogin" onclick="login()" style="background-color:#e82121"><i class="fa fa-google-plus"></i> Sign in with Google</button>
        <div id="uname"></div>
        <div id="uemail"></div><br />
        <div><img id="imgHolder" style="height:120px;width:120px;" /></div>
    </div>
</body>
</html>*@

<script>
 // Code cũ chưa có mail
@* model WebBanDienThoaiDoAn.Models.ExternalLoginListViewModel
    @using Microsoft.Owin.Security

        < h4 > Use another service to log in.</h4 >
            <hr />
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if(loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        using(Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
            </div>
        }
    }
}*@

</script>



